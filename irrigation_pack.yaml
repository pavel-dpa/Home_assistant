# Example configuration.yaml entry
irrigation_unlimited:
  controllers:
    - name: "Morning_set"
      enabled: false
      entity_id: "switch.tasmota3_1" # main valve
      all_zones_config: # <= Add these three lines <─┐
        show: # <= to the configuration            <─┤
          timeline: true # <= for all zones        <─┘
      preamble: '00:01'
      zones:
        #- zone_id: 1
        - name: "Right lawn"
          entity_id: "switch.tasmota1_1"
        - name: "Right Garadge"
          entity_id: "switch.tasmota1_2"
        - name: "Wattering Trees"
          entity_id: "switch.tasmota1_3"
        - name: "Wattering Trees & Bushes"
          entity_id: "switch.tasmota1_4"
        - name: "Front yard"
          entity_id: "switch.tasmota2_1"
        - name: "Wattering  Bushes"
          entity_id: "switch.tasmota2_2" 
        - name: "Back yard terass"
          entity_id: "switch.tasmota2_3"
        - name: "Back yard"
          entity_id: "switch.tasmota2_4"
      sequences:
        - name: "Sequences_morning"
          delay: "00:01"
          enabled: true
        #  repeat: 2
          schedules:
        #    start_n_days: now()
        #    every_n_days: 4
        #- time: "05:00" - for 5 AM
            time:
              sun: "sunrise"
              before: "00:15"
            anchor: finish
          zones:
            # Session 1
              - zone_id: 1
                duration: "00:07"
                #repeat: 2
              - zone_id: 2
                duration: "00:05"
                #repeat: 2
              - zone_id: 3
                duration: "00:05"
                #repeat: 2
              - zone_id: 4
                duration: "00:05"
                #repeat: 1
              - zone_id: 5
                duration: "00:07"
                #repeat: 2
              - zone_id: 6
                duration: "00:05"
                #repeat: 1
              - zone_id: 7
                duration: "00:10"
                #repeat: 2
              - zone_id: 8
                duration: "00:14"
                #repeat: 3
            # Session 2
              - zone_id: 1
                duration: "00:07"
                #repeat: 2
              - zone_id: 2
                duration: "00:05"
                #repeat: 2
              - zone_id: 3
                duration: "00:05"
                #repeat: 2
              - zone_id: 5
                duration: "00:07"
                #repeat: 2
              - zone_id: 7
                duration: "00:10"
                #repeat: 2
              - zone_id: 8
                duration: "00:14"
                #repeat: 3
            # Session 3
              - zone_id: 8
                duration: "00:14"
                #repeat: 3
    - name: "Evening_set"
      enabled: false
      entity_id: "switch.tasmota3_1" # main valve
      all_zones_config: # <= Add these three lines <─┐
        show: # <= to the configuration            <─┤
          timeline: true # <= for all zones        <─┘
      preamble: '00:01'
      zones:
        #- zone_id: 1
        - name: "Right lawn"
          entity_id: "switch.tasmota1_1"
        - name: "Right Garadge"
          entity_id: "switch.tasmota1_2"
        - name: "Wattering Trees"
          entity_id: "switch.tasmota1_3"
        - name: "Wattering Trees & Bushes"
          entity_id: "switch.tasmota1_4"
        - name: "Front yard"
          entity_id: "switch.tasmota2_1"
        - name: "Wattering  Bushes"
          entity_id: "switch.tasmota2_2" 
        - name: "Back yard terass"
          entity_id: "switch.tasmota2_3"
        - name: "Back yard"
          entity_id: "switch.tasmota2_4"
      sequences:
        - name: "Sequences_morning"
          delay: "00:01"
          enabled: true
        #  repeat: 2
          schedules:
        #    start_n_days: now()
        #    every_n_days: 4
        #- time: "05:00" - for 5 AM
            time:
              sun: "sunset"
              after: "00:15"
          zones:
            # Session 1
              - zone_id: 1
                duration: "00:07"
                #repeat: 2
              - zone_id: 2
                duration: "00:05"
                #repeat: 2
              - zone_id: 3
                duration: "00:05"
                #repeat: 2
              - zone_id: 4
                duration: "00:05"
                #repeat: 1
              - zone_id: 5
                duration: "00:07"
                #repeat: 2
              - zone_id: 6
                duration: "00:05"
                #repeat: 1
              - zone_id: 7
                duration: "00:10"
                #repeat: 2
              - zone_id: 8
                duration: "00:14"
                #repeat: 3
            # Session 2
              - zone_id: 1
                duration: "00:07"
                #repeat: 2
              - zone_id: 2
                duration: "00:05"
                #repeat: 2
              - zone_id: 3
                duration: "00:05"
                #repeat: 2
              - zone_id: 5
                duration: "00:07"
                #repeat: 2
              - zone_id: 7
                duration: "00:10"
                #repeat: 2
              - zone_id: 8
                duration: "00:14"
                #repeat: 3
            # Session 3
              - zone_id: 8
                duration: "00:14"
                #repeat: 3



                


sensor:
### LEGACY PART - to DELETE ####################
  - platform: average
    name: irrigation_unlimited_rain_0
    entities:
      - sensor.openweathermap_forecast_precipitation
    precision: 2
    start: "{{ now().replace(hour=0).replace(minute=30).replace(second=0) }}"
    end: "{{ now() }}"
    scan_interval: 600
  
  - platform: average
    name: irrigation_unlimited_rain_1
    entities:
      - sensor.openweathermap_forecast_precipitation
    precision: 2
    start: "{{ now().replace(hour=0).replace(minute=30).replace(second=0) - timedelta(days=1) }}"
    end: "{{ now().replace(hour=23).replace(minute=59).replace(second=0) - timedelta(days=1) }}"
    scan_interval: 600


  - platform: template
    sensors:
      irrigation_unlimited_rain_today_24:
        unit_of_measurement: 'mm'
        value_template:  "{{ float(states('sensor.irrigation_unlimited_rain_0'),0)* 24}}"
  
  - platform: template
    sensors:
      irrigation_unlimited_rain_yesterday_24:
        unit_of_measurement: 'mm'
        value_template:  "{{ float(states('sensor.irrigation_unlimited_rain_1'),0) * 24}}"
###########################################################



# implemenation related to 5 AM hour when accurweather update data
  - platform: template
    sensors:
      irrigation_unlimited_temp_max_today:
        value_template: >
          {% set temp_max_forecast_0 =float((state_attr('weather.home', 'forecast')[0].temperature),0) %}
          {% set temp_max_forecast_1 =float((state_attr('weather.home', 'forecast')[1].temperature),0) %}
          {% if now().hour in [0, 1, 2, 3, 4] %}
          {% set Ret_val =  temp_max_forecast_1 %}
          {% else %}
          {% set Ret_val =  temp_max_forecast_0 %}
          {% endif %}
          {{ (Ret_val) }}
        unit_of_measurement: "°C"

# implemenation related to 5 AM hour when accurweather update data
  - platform: template
    sensors:
      irrigation_unlimited_rain_today:
        unit_of_measurement: 'mm'
        value_template: >
          {% set rain_today_0 =float((state_attr('weather.home', 'forecast')[0].precipitation),0) %}
          {% set rain_today_1 =float((state_attr('weather.home', 'forecast')[1].precipitation),0) %}
          {% if now().hour in [0, 1, 2, 3, 4] %}
          {% set Ret_val_today =  rain_today_1 %}
          {% else %}
          {% set Ret_val_today =  rain_today_0 %}
          {% endif %}
          {{ (Ret_val_today) }}

# implemenation related to 5 AM hour when accurweather update data
  - platform: template
    sensors:
      irrigation_unlimited_rain_tomorrow:
        unit_of_measurement: 'mm'
        value_template: >
          {% set rain_tom_1 =float((state_attr('weather.home', 'forecast')[1].precipitation),0) %}
          {% set rain_tom_2 =float((state_attr('weather.home', 'forecast')[2].precipitation),0) %}
          {% if now().hour in [0, 1, 2, 3, 4] %}
          {% set Ret_val_tomorrow =  rain_tom_2 %}
          {% else %}
          {% set Ret_val_tomorrow =  rain_tom_1 %}
          {% endif %}
          {{ (Ret_val_tomorrow) }}

#### Levels of temerature
#### 15C is temperature to start irrigation - defined in automations as conditions
#### before 21C - one per 72 days = 6 (Morning & Evening = 2)
#### above 21C below 25C - one per 48 hours = 4
#### above 25C below 30C - one per 24 hours = 2
#### above 30C - one per 12 hours = 1
  - platform: template
    sensors:
      irrigation_unlimited_counter:
        unit_of_measurement: 'mm'
        value_template: >
          {% set temp_max =states('irrigation_unlimited_temp_max_today') | float(-2) %}
          {% if temp_max <21 %}
          {% set IUC_val = 6  | int %}
          {% elif temp_max >21 and temp_max <25 %}
          {% set IUC_val = 4  | int %}
          {% elif temp_max >25 and temp_max <30 %}
          {% set IUC_val = 2  | int %}
          {% elif temp_max >30 %}
          {% set IUC_val = 1  | int %}
          {% endif %}
          {{ (IUC_val) }}

#### levels of rain
### today - 10 mm - irrigation is off / adjusted
### yesterday and tomorrow  - 20 mm - irrigation is off/ adjusted
  - platform: template
    sensors:
      irrigation_unlimited_rain_ajastment:
        unit_of_measurement: '%'
        value_template: >
          {% set rain_y = float(states('sensor.irrigation_unlimited_rain_yesterday_24'), 0) /20 %}
          {% set rain_n = float(states('sensor.irrigation_unlimited_rain_today'), 0) /10 %}
          {% set rain_t = float(states('sensor.irrigation_unlimited_rain_tomorrow'), 0) /20 %}
          {% set rain_adj = float((1 - (rain_y+rain_n+rain_t)), 0)*100 %}
          {{100 if rain_adj <0 else float(rain_adj,0) }}