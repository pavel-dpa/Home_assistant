- id: '1673726732766'
  alias: HW_heater_night_on
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: schedule.hw_night_heater
      state: 'on'
    - condition: state
      entity_id: input_boolean.hw_night_heater
      state: 'off'
    - condition: device
      type: is_off
      device_id: 2af4ef0f2bcda9a25e0f0bbf7ea493d2
      entity_id: switch.sonoff_10016da541
      domain: switch
  action:
  - type: turn_on
    device_id: 2af4ef0f2bcda9a25e0f0bbf7ea493d2
    entity_id: switch.sonoff_10016da541
    domain: switch
  - service: notify.notify
    data:
      message: HW night is on
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.hw_night_heater
  mode: single
- id: '1673732606457'
  alias: Test_notification
  description: ''
  trigger:
  - platform: device
    device_id: c3a76d6de50c7686bd7051d3a21eee32
    domain: device_tracker
    entity_id: device_tracker.21091116ag
    type: enters
    zone: zone.home
  condition: []
  action:
  - service: notify.notify
    data:
      message: Pavlo at home
  mode: single
- id: '1674030397694'
  alias: Water_leaks
  description: ''
  trigger:
  - type: moist
    platform: device
    device_id: c52026eaf890fb585b64f5bb03bb6a4e
    entity_id: binary_sensor.bathroom_1_leak_water_leak
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - type: moist
    platform: device
    device_id: fd7758ab4ceb69d494f71c8430a000d6
    entity_id: binary_sensor.bathroom_2_leak_water_leak
    domain: binary_sensor
  - type: moist
    platform: device
    device_id: 7dd4b9ccf6518d201da4c30ed646185c
    entity_id: binary_sensor.technical_leak_water_leak
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - type: turn_off
    device_id: a6bf65abd239c30e7543eb30f291cfa2
    entity_id: switch.0xa4c1381766502901_left
    domain: switch
  - type: turn_off
    device_id: e0a8e8d356f5a6dfdf554f9e46c34dbf
    entity_id: switch.main_water
    domain: switch
  - type: turn_off
    device_id: 3080b9c89d9692d225fefa392b50bd23
    entity_id: switch.0x84fd27fffe927f0d
    domain: switch
  - type: turn_off
    device_id: 862a390e759b291bd94777c4dd62c07b
    entity_id: switch.0x804b50fffeb0d7fe
    domain: switch
  - service: notify.notify
    data:
      message: WATER LEAKS - WATER IS CLOSED
  mode: single
- id: '1674140911254'
  alias: HW_watter_night_off
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: schedule.hw_night_heater
      state: 'off'
    - condition: state
      entity_id: input_boolean.hw_night_heater
      state: 'on'
  action:
  - type: turn_off
    device_id: 2af4ef0f2bcda9a25e0f0bbf7ea493d2
    entity_id: switch.sonoff_10016da541
    domain: switch
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.hw_night_heater
  - service: notify.notify
    data:
      message: HW night is off
  mode: single
- id: '1681721042877'
  alias: temp_control_rooms
  description: Control temperature of thermostats in rooms depend on outside temp
  trigger:
  - platform: state
    entity_id:
    - sensor.rooms_temp_settler
  - platform: state
    entity_id:
    - input_number.guestroom_refine_temp
  - platform: state
    entity_id:
    - input_number.bedroom_refine_temp
  - platform: state
    entity_id:
    - input_number.childrenroom_refine_temp
  - platform: time_pattern
    hours: /1
    enabled: false
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.temperature_control
      state: 'on'
    - condition: template
      value_template: '{{ (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.guestroom_refine_temp''),0))
        != float(state_attr(''climate.01guestroom'', ''temperature''),0)

        or

        (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.bedroom_refine_temp''),0))
        != float(state_attr(''climate.02bedroom'', ''temperature''),0)

        or

        (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.childrenroom_refine_temp''),0))
        != float(state_attr(''climate.02childrenroom'', ''temperature''),0)

        }}'
  action:
  - if:
    - condition: template
      value_template: '{{ (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.guestroom_refine_temp''),0))
        != float(state_attr(''climate.01guestroom'', ''temperature''),0)}}'
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.guestroom_refine_temp''),0))
          }}'
      target:
        entity_id: climate.01guestroom
  - if:
    - condition: template
      value_template: '{{ (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.childrenroom_refine_temp''),0))
        != float(state_attr(''climate.02childrenroom'', ''temperature''),0)}}'
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.childrenroom_refine_temp''),0))
          }}'
      target:
        entity_id: climate.02childrenroom
  - if:
    - condition: template
      value_template: '{{ (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.bedroom_refine_temp''),0))
        != float(state_attr(''climate.02bedroom'', ''temperature''),0)}}'
    then:
    - service: climate.set_temperature
      data:
        temperature: '{{ (float(states(''sensor.rooms_temp_settler''),0)+float(states(''input_number.bedroom_refine_temp''),0))
          }}'
      target:
        entity_id: climate.02bedroom
  mode: single
- id: '1683318245786'
  alias: 'irrigation_unlimited_adjustment '
  description: Adjast enabled irrigation
  trigger:
  - platform: state
    entity_id:
    - sensor.irrigation_unlimited_rain_ajastment
    for:
      hours: 0
      minutes: 20
      seconds: 0
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.irrigation_state
      state: 'on'
    then:
    - service: script.new_script
      data: {}
  - if:
    - condition: state
      entity_id: input_boolean.irrigation_state_drop
      state: 'on'
    then:
    - service: script.irrigation_on_and_adjust_drops
      data: {}
  mode: single
- id: '1685272713791'
  alias: irrigation_unlimited_finish_v2
  description: Finish irrigation
  trigger:
  - platform: event
    event_type: irrigation_unlimited_finish
  condition: []
  action:
  - service: irrigation_unlimited.disable
    data:
      entity_id: binary_sensor.irrigation_unlimited_c1_m
    enabled: false
  - service: irrigation_unlimited.disable
    data:
      entity_id: binary_sensor.irrigation_unlimited_c2_m
    enabled: false
  - service: notify.admin_mobile
    data:
      message: 'Time: {{ as_local(trigger.event.time_fired).strftime(''%c'') }}

        Controller: {{ trigger.event.data.controller.index + 1 }} {{ trigger.event.data.controller.name
        }}

        Sequence: {{ trigger.event.data.sequence.index + 1 }} {{ trigger.event.data.sequence.name
        }}

        Schedule: {% if trigger.event.data.schedule.index is integer %}{{ trigger.event.data.schedule.index
        + 1 }} {{ trigger.event.data.schedule.name }}{% else %} Manual {% endif %}

        Duration: {{ timedelta(seconds=trigger.event.data.run.duration) }} irrigation
        done

        '
  mode: single
- id: '1685272898846'
  alias: New Automation_Backup
  description: Adjast enabled irrigation
  trigger:
  - platform: state
    entity_id:
    - sensor.irrigation_unlimited_rain_ajastment
    for:
      hours: 0
      minutes: 20
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.irrigation_state
      state: 'on'
  action:
  - if:
    - condition: template
      value_template: '{{float(states(''sensor.irrigation_unlimited_rain_ajastment'',0))==0}}'
      alias: Disable everything as rain
    then:
    - service: irrigation_unlimited.disable
      data:
        entity_id: binary_sensor.irrigation_unlimited_c3_m
    - service: irrigation_unlimited.disable
      data:
        entity_id: binary_sensor.irrigation_unlimited_c2_m
    - service: irrigation_unlimited.disable
      data:
        entity_id: binary_sensor.irrigation_unlimited_c1_m
    else:
    - service: irrigation_unlimited.enable
      data:
        entity_id: binary_sensor.irrigation_unlimited_c3_m
    - service: irrigation_unlimited.adjust_time
      data:
        entity_id: binary_sensor.irrigation_unlimited_c3_m
        percentage: '{% set rain_adj = states(''sensor.irrigation_unlimited_rain_ajastment'')|
          float(-2) %}  {{ (rain_adj) }}

          '
    - if:
      - condition: template
        value_template: "{{ float(states('input_number.irrigation_counter_check'),0)
          == 1 }}\t\t"
      then:
      - choose:
        - conditions:
          - condition: time
            after: 00:01:00
            before: '12:01:00'
          sequence:
          - service: irrigation_unlimited.enable
            data:
              entity_id: binary_sensor.irrigation_unlimited_c1_m
          - service: irrigation_unlimited.adjust_time
            data:
              entity_id: binary_sensor.irrigation_unlimited_c1_m
              percentage: '{% set rain_adj = states(''sensor.irrigation_unlimited_rain_ajastment'')|
                float(-2) %}  {{ (rain_adj) }}

                '
        - conditions:
          - condition: time
            after: '12:01:00'
            before: 00:01:00
          sequence:
          - service: irrigation_unlimited.enable
            data:
              entity_id: binary_sensor.irrigation_unlimited_c2_m
          - service: irrigation_unlimited.adjust_time
            data:
              entity_id: binary_sensor.irrigation_unlimited_c2_m
              percentage: '{% set rain_adj = states(''sensor.irrigation_unlimited_rain_ajastment'')|
                float(-2) %}  {{ (rain_adj) }}

                '
      alias: Enable irrigation with conditions
  mode: single
- id: '1685341735269'
  alias: irrigation_unlimited_On/off
  description: enabled/disable irrigation
  trigger:
  - platform: state
    entity_id:
    - input_boolean.irrigation_state
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.irrigation_state
      state: 'off'
    then:
    - service: script.irrigation_off
      data: {}
    - service: irrigation_unlimited.disable
      data:
        entity_id: binary_sensor.irrigation_unlimited_c1_m
      enabled: false
    else:
    - service: script.new_script
      data: {}
    - service: irrigation_unlimited.enable
      data:
        entity_id: binary_sensor.irrigation_unlimited_c2_m
      enabled: false
    - service: irrigation_unlimited.adjust_time
      data:
        entity_id: binary_sensor.irrigation_unlimited_c2_m
        percentage: '{% set rain_adj = states(''sensor.irrigation_unlimited_rain_ajastment'')|
          float(-2) %}  {{ (rain_adj) }}

          '
      enabled: false
    - if:
      - condition: template
        value_template: '{{ float(states(''sensor.irrigation_unlimited_temp_max_today''),0)>=
          30}}'
      then:
      - service: irrigation_unlimited.enable
        data:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
      - service: irrigation_unlimited.adjust_time
        data:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
          percentage: '{% set rain_adj = states(''sensor.irrigation_unlimited_rain_ajastment'')|
            float(-2) %}  {{ (rain_adj) }}

            '
      else:
      - service: irrigation_unlimited.disable
        data:
          entity_id: binary_sensor.irrigation_unlimited_c1_m
      enabled: false
  mode: single
- id: '1689573407925'
  alias: irrigation_unlimited_On/off_drops
  description: enabled/disable irrigation drops
  trigger:
  - platform: state
    entity_id:
    - input_boolean.irrigation_state_drop
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.irrigation_state_drop
      state: 'off'
    then:
    - service: script.1689573585540
      data: {}
    else:
    - service: script.irrigation_on_and_adjust_drops
      data: {}
  mode: single
- id: '1701598690736'
  alias: temp_control_uf
  description: ''
  trigger:
  - platform: time_pattern
    hours: /2
  - platform: device
    device_id: d50626e193f0ec3ca722ba91dd6e0c56
    domain: climate
    entity_id: e7091896bbbeca0a4906d67251167e8c
    type: current_temperature_changed
    above: 15
    below: 25
    enabled: false
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.temperature_control
      state: 'on'
    - condition: numeric_state
      entity_id: climate.01livingroom
      attribute: current_temperature
      above: 21.2
      below: 22.5
      alias: 'Limits of work& formula '
  action:
  - service: climate.set_temperature
    data:
      temperature: '{% set base_temp  = float(state_attr(''climate.01LivingRoom'',''current_temperature''),0)
        %} {% set uf_val_temp = base_temp*base_temp*-18.333+783.33*base_temp-8339.3
        %} {{ (uf_val_temp) }}'
    target:
      entity_id:
      - climate.uf01bathroom
      - climate.uf02bathroom
    alias: Set UF in bathroom 1 & 2
    enabled: true
  - service: climate.set_temperature
    data:
      temperature: '{% set base_temp  = float(state_attr(''climate.01LivingRoom'',''current_temperature''),0)
        %}   {% set uf_val_temp = base_temp*base_temp*-16.667+711.67*base_temp-7570
        %}  {{ (uf_val_temp) }}'
    target:
      entity_id:
      - climate.uffoyer
    alias: Set UFFoyer
  - service: climate.set_temperature
    data:
      temperature: '{% set base_temp  = float(state_attr(''climate.01LivingRoom'',''current_temperature''),0)
        %}   {% set uf_val_temp = base_temp*base_temp*-14.167+601.67*base_temp-6360.2
        %}  {{ (uf_val_temp) }}'
    target:
      entity_id:
      - climate.uflivingroom
      - climate.ufkitchen
      - climate.ufhallway
    alias: Set UFKitchen, UFLivingRoom, and UFHallway
  mode: single
